---
import type { GetStaticPaths } from "astro";
import { getEntry, render } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header";
import Footer from "../../../components/Footer.astro";
import { getAllPostsSorted, convertHTMLToPlainText, getFormattedDate, getReadingTime } from "../../../lib/helpers";

export const getStaticPaths = (async () => {
  const sortedPosts = await getAllPostsSorted();

  return sortedPosts.map(({ id, data }) => ({
    params: {
      category: data.category.toLowerCase(),
      slug: id,
    },
  }));
}) satisfies GetStaticPaths;

const { slug } = Astro.params as { slug: string };
const { href } = Astro.url;

const post = await getEntry("posts", slug);

if (!post) {
  return Astro.redirect("/404");
}

const { Content } = await render(post);
const plainText = convertHTMLToPlainText(post.rendered?.html ?? "");
const readingTime = getReadingTime(plainText);
const { title, date, category } = post.data;
---

<Layout title={`John Tsevdos Blog - ${title}`} description={`John Tsevdos Blog - ${title}`} url={href}>
  <Header client:load />

  <div class="container mx-auto px-4 py-16 lg:px-8 xl:max-w-7xl">
    <header>
      <h1 class="mb-4 text-4xl font-black text-black dark:text-white">{title}</h1>
      <p class="pb-3 text-l leading-relaxed font-medium text-gray-700 dark:text-gray-300">
        <span class="font-bold tracking-wider text-blue-600 dark:text-blue-500">
          {category}
        </span> · <span class="bold">{getFormattedDate(date)}</span> · {readingTime} min read
      </p>
    </header>

    <article
      class="max-w-full prose prose-lg md:prose-2xl dark:prose-invert prose-a:text-blue-600 prose-a:no-underline prose-a:hover:text-blue-400 prose-a:hover:opacity-75 dark:prose-a:text-blue-400 dark:prose-a:hover:text-blue-300 prose-img:rounded-lg"
    >
      <Content />
    </article>
  </div>

  <Footer />
</Layout>
